Описание 
Гостевая книга предоставляет возможность пользователям сайта оставлять сообщения на сайте. Все данные введенные пользователем сохраняются в БД MySQL. Также в БД сохраняются данные о IP-адресе пользователя, его браузере, дате написания сообщения.

Особенности реализации 

Форма добавления записи в гостевую книгу должна иметь следующие поля:

User Name (цифры и буквы в кодировке UTF-8) – обязательное поле

E-mail (формат e-mail) - обязательное поле

Homepage (формат URL) – необязательное поле

CAPTCHA (цифры и буквы латинского алфавита) – изображение и обязательное поле (http://ru.wikipedia.org/wiki/CAPTCHA)

Text (непосредственно сам текст сообщения, HTML тэги недопустимы) – обязательное поле

Сообщения должны выводится в виде таблицы, с возможностью сортировки по следующим полям: User Name, e-mail, дата добавления сообщения (как в порядке убывания, так и возрастания). Сообщения должны разбиваться на страницы (количество сообщений на странице задается в конфигурационном файле). Сортировка по умолчанию - LIFO.

 Требования 

Необходимо выполнить тестовое задание в полном объеме, обязательно руководствуясь следующими требованиями:

Пример должен быть полностью рабочий, то есть все части должны запускаться и не писать никаких сообщений об ошибках в error.log web-сервера Apache.

В задании должен использоваться текстовый конфигурационный файл, в котором задаются настройки БД, параметры captcha, количество сообщений выводимых на одну страницу.

Весь функционал для с captcha и БД должен быть оформлен отдельными классами (с конструкторами и методами) для демонстрации навыков работы с ООП.

Для работы c HTML необходимо использовать шаблонизатор, не допускается размещение HTML кода внутри скриптов.

Для демонстрации работы с JavaScript, необходимо выполнить проверку введенных параметров (с выдачей сообщения об ошибках при необходимости).

К заданию необходимо приложить sql создающий необходимые для работы таблицы в БД.

При написании задания следует обратить внимание на защиту от XSS атак и SQL–инъекций. (http://ru.wikipedia.org/wiki/Межсайтовый_скриптинг и http://ru.wikipedia.org/wiki/Инъекция_SQL).

Приветствуется создания простейшего дизайна с использованием CSS.

Обратите внимание, что в примере оценивается качество кода, его форматирование (пробелы, отступы, пустые строки, выделение смысловых блоков и т.п.), модульность, соответствие "лучшим практикам" PHP-программирования и прочее.

Тестовая конфигурация 

Система должна корректно работать на ОС FreeBSD и Debian/Ubuntu со следующей конфигурацией:

Php 5+

MySQL 5.0+

Apache 1.3 и 2.2